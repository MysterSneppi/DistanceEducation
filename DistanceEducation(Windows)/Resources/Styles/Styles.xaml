<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:component="clr-namespace:DistanceEducation_Windows_.Components">

    <!--MenuButton-->
    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type RadioButton}" x:Key="MenuButtonTheme" >
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}"  x:Name="MenuButton">
                        <Border VerticalAlignment="Stretch"
                              HorizontalAlignment="Stretch"
                              Background="{TemplateBinding Background}"
                                    CornerRadius="0,10,10,0"
                                    Margin="0,0,10,0">

                            <StackPanel Orientation="Horizontal">
                                <Image RenderOptions.BitmapScalingMode="HighQuality" 
                                           Source = "{ Binding Tag , RelativeSource = { RelativeSource FindAncestor , AncestorType = {x:Type RadioButton }}}"
                                           Width="24"
                                           Height="24"
                                           Margin="24,0,16,0"
                                           HorizontalAlignment="Center"
                                       VerticalAlignment="Center"/>

                                <TextBlock Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"                                     
                                       Foreground="{TemplateBinding Property=Foreground}"
                                       FontSize="20"/>

                            </StackPanel>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background"  Value="Transparent" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Height" Value="50"/>
        </Style.Setters>


        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#2F3CED"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Background" Value="#2F3CED"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--AccountButton-->
    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type RadioButton}" x:Key="AccountButton" >
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}"  x:Name="MenuButton">
                        <Border 
                              Background="{TemplateBinding Background}"
                                    CornerRadius="10,10,10,10"
                                    Margin="15,0,10,0">

                            <ContentPresenter />

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background"  Value="Transparent" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Height" Value="50"/>
        </Style.Setters>


        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--#region Authorization-->
    <!--AuthorizationTexBox-->
    <Style  TargetType="TextBox" x:Key="AuthorizationTextBox" >
        <Style.Setters>
            <Setter Property="Background" Value="#EEF6FB"/>
            <Setter Property="Width" Value="400"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox"  x:Name="AuthButton">
                        <Border VerticalAlignment="Stretch"
                              HorizontalAlignment="Stretch"
                              Background="{TemplateBinding Background}"
                                    CornerRadius="8"
                                    Margin="0,0,0,0">
                            <TextBox Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Path=Text}"  BorderThickness="0" VerticalAlignment="Center" Background="Transparent" FontSize="16" Margin="20,0,20,0"/>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <!--AuthorizationPasswordBox-->
    <Style  TargetType="{x:Type component:BindablePasswordBox}" x:Key="PasswordBox" >
        <Style.Setters>
            <Setter Property="Background" Value="#EEF6FB"/>
            <Setter Property="Width" Value="400"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type component:BindablePasswordBox}"  x:Name="PassBox">
                        <Border VerticalAlignment="Stretch"
                              HorizontalAlignment="Stretch"
                              Background="{TemplateBinding Background}"
                                    CornerRadius="8"
                                    Margin="0,0,0,0">
                            
                            <component:BindablePasswordBox Password="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Path=Password}"  
                                          BorderThickness="0"
                                          VerticalAlignment="Center"
                                          Background="Transparent" 
                                          FontSize="16" 
                                          Margin="20,0,20,0"/>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <!--AuthorizationButton-->
    <Style  TargetType="{x:Type Button}" x:Key="AuthorizationButton" >
        
        
        <Style.Setters>
            <Setter Property="Background" Value="#2F3CED"/>
            <Setter Property="Width" Value="140"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Effect">
                <Setter.Value >
                    <DropShadowEffect ShadowDepth="0" 
                                      BlurRadius="10"
                                      Color="Gray"
                                      x:Name="Shadow"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button"  x:Name="Button">
                        <Border VerticalAlignment="Stretch"
                              HorizontalAlignment="Stretch"
                              Background="{TemplateBinding Background}"
                                    CornerRadius="8"
                                    Margin="0,0,0,0">
                            <TextBlock Text="{TemplateBinding Content}" 
                                       FontSize="16"
                                       Foreground="#FFFFFF"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"/>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers  >
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Height" Value="45"/>
                <Setter Property="Width" Value="145"/>
            </Trigger>
         
        </Style.Triggers>
        
        
    </Style>
    <!--AuthorizationListInstitutions-->
    <Style  TargetType="{x:Type Border }" x:Key="ListInstitutions" >
        <Style.Setters>
            <Setter Property="Background" Value="#EEF6FB"/>
            <Setter Property="Width" Value="400"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="CornerRadius" Value="8"/>
        </Style.Setters>
        
    </Style>
    <!--#endregion-->
    <!--RadioButtonImageCarousel-->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#A0D7E7"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#A0D7E7"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#A0D7E7"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <Border x:Name="radioButtonBorder" Width="4" Height="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Width" TargetName="radioButtonBorder" Value="4"/>
                            <Setter Property="Height" TargetName="radioButtonBorder" Value="4"/>
                            <Setter Property="BorderThickness" TargetName="radioButtonBorder" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Width" TargetName="radioButtonBorder" Value="8"/>
                            <Setter Property="Height" TargetName="radioButtonBorder" Value="8"/>
                            <Setter Property="BorderThickness" TargetName="radioButtonBorder" Value="2"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>